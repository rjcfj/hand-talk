name: CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  frontend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install pnpm (fixed version)
        run: npm install -g pnpm@8.10.0

      - name: Verify pnpm version
        run: pnpm --version

      - name: Approve esbuild to avoid warnings
        run: pnpm config set ignore-scripts false

      - name: Install dependencies (frontend)
        run: pnpm install --no-frozen-lockfile
        working-directory: frontend

      - name: Run frontend lint (optional)
        run: pnpm lint || true
        working-directory: frontend

      - name: Run frontend tests with coverage
        run: pnpm test
        working-directory: frontend
        env:
          CI: true

      - name: Upload frontend coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: frontend/coverage

  backend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install pnpm (fixed version)
        run: npm install -g pnpm@8.10.0

      - name: Verify pnpm version
        run: pnpm --version

      - name: Approve esbuild to avoid warnings
        run: pnpm config set ignore-scripts false

      - name: Install dependencies (backend)
        run: pnpm install --no-frozen-lockfile
        working-directory: backend

      - name: Run backend lint (optional)
        run: pnpm lint || true
        working-directory: backend

      - name: Run backend tests with coverage
        run: pnpm test
        working-directory: backend
        env:
          CI: true

      - name: Upload backend coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: backend/coverage
